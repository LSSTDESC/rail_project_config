# Includes
Includes:
  - "${RAIL_PROJECT_CONFIG_DIR}/roman_rubin/roman_rubin_common.yaml"


Catalogs:
  - CatalogTemplate:
      name: truth
      path_template: "{catalogs_dir}/{parent}_{sim_version}/{healpix}/part-0.parquet"
      iteration_vars: ['healpix']
  - CatalogTemplate:
      name: reduced
      path_template: "{catalogs_dir}/{parent}_{sim_version}_{selection}/{healpix}/part-0.pq"
      iteration_vars: ['healpix']
  - CatalogTemplate:
      name: degraded
      path_template: "{catalogs_dir}/{project}_{sim_version}_{selection}_{flavor}/{healpix}/{basename}"
      iteration_vars: ['healpix']


Project:

  Name: roman_rubin_2023

  PathTemplates: {}

  # These are used to make all the other paths
  CommonPaths:
    project: roman_plus_rubin
    sim_version: v1.1.3
    parent: roman_rubin_2023
    root: /sdf/data/rubin/shared/pz
    scratch_root: "{root}"
    catalogs_dir: "{root}/data"

  # Baseline configuraiton, included in others by default
  Baseline:
    pipelines: ['all']
    file_aliases:  # Set the training and test files
      test: test_file_100k
      train: train_file_100k
      train_zCOSMOS: train_file_zCOSMOS_100k
      train_HSC: train_file_HSC_100k

  # These define the variant configurations for the various parts of the analysis
  Flavors:
    - Flavor:
        name: train_cosmos
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_zCOSMOS_100k
    - Flavor:
        name: gpz_gl
        pipelines: ['inform', 'estimate', 'evaluate', 'pz']
        pipeline_overrides:  # Override specifics for particular pipelines
          default:
            kwargs:
              algorithms: ['gpz']
          inform:
            inform_gpz:
              gpz_method: GL

    - Flavor:
        name: knn_romanrubin_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['knn']
          pz:
            inform_knn:
              trainfrac: 0.75
              leaf_size: 15
              nneigh_min: 3
              nneigh_max: 7

    - Flavor:
        name: knn_romanrubin_zCOSMOS
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_zCOSMOS_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['knn']
          pz:
            inform_knn:
              trainfrac: 0.75
              leaf_size: 15
              nneigh_min: 3
              nneigh_max: 7

    - Flavor:
        name: knn_romanrubin_HSC
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_HSC_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['knn']
          pz:
            inform_knn:
              trainfrac: 0.75
              leaf_size: 15
              nneigh_min: 3
              nneigh_max: 7

    - Flavor:
        name: fzb_romanrubin_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['fzboost']
          pz:
            inform_fzboost:
              trainfrac: 0.75
              bumpmin: 0.02
              bumpmax: 0.35
              sharpmin: 0.7
              sharpmax: 2.1
              nsharp: 15
              max_basis: 35
              regression_params:
                max_depth: 8

    - Flavor:
        name: fzb_romanrubin_HSC
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_HSC_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['fzboost']
          pz:
            inform_fzboost:
              trainfrac: 0.75
              bumpmin: 0.02
              bumpmax: 0.35
              sharpmin: 0.7
              sharpmax: 2.1
              nsharp: 15
              max_basis: 35
              regression_params:
                max_depth: 8

    - Flavor:
        name: fzb_romanrubin_zCOSMOS
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_zCOSMOS_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['fzboost']
          pz:
            inform_fzboost:
              trainfrac: 0.75
              bumpmin: 0.02
              bumpmax: 0.35
              sharpmin: 0.7
              sharpmax: 2.1
              nsharp: 15
              max_basis: 35
              regression_params:
                max_depth: 8

    - Flavor:
        name: tpz_romanrubin_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['tpz']
          pz:
            inform_tpz:
              use_atts: ['LSST_obs_u', 'LSST_obs_g', 'LSST_obs_r', 'LSST_obs_i', 'LSST_obs_z', 'LSST_obs_y']
              err_dict: {'LSST_obs_u': 'LSST_obs_u_err', 'LSST_obs_g': 'LSST_obs_g_err', 'LSST_obs_r': 'LSST_obs_r_err', 'LSST_obs_i': 'LSST_obs_i_err', 'LSST_obs_z': 'LSST_obs_z_err', 'LSST_obs_y': 'LSST_obs_y_err', 'redshift': 'None'}
              tree_strategy: sklearn
            estimate_tpz:
              test_err_dict: {'LSST_obs_u': 'LSST_obs_u_err', 'LSST_obs_g': 'LSST_obs_g_err', 'LSST_obs_r': 'LSST_obs_r_err', 'LSST_obs_i': 'LSST_obs_i_err', 'LSST_obs_z': 'LSST_obs_z_err', 'LSST_obs_y': 'LSST_obs_y_err', 'redshift': None}

    - Flavor:
        name: tpz_romanrubin_zCOSMOS
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_zCOSMOS_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['tpz']
          pz:
            inform_tpz:
              use_atts: ['LSST_obs_u', 'LSST_obs_g', 'LSST_obs_r', 'LSST_obs_i', 'LSST_obs_z', 'LSST_obs_y']
              err_dict: {'LSST_obs_u': 'LSST_obs_u_err', 'LSST_obs_g': 'LSST_obs_g_err', 'LSST_obs_r': 'LSST_obs_r_err', 'LSST_obs_i': 'LSST_obs_i_err', 'LSST_obs_z': 'LSST_obs_z_err', 'LSST_obs_y': 'LSST_obs_y_err', 'redshift': 'None'}
              tree_strategy: sklearn
            estimate_tpz:
              test_err_dict: {'LSST_obs_u': 'LSST_obs_u_err', 'LSST_obs_g': 'LSST_obs_g_err', 'LSST_obs_r': 'LSST_obs_r_err', 'LSST_obs_i': 'LSST_obs_i_err', 'LSST_obs_z': 'LSST_obs_z_err', 'LSST_obs_y': 'LSST_obs_y_err', 'redshift': None}

    - Flavor:
        name: tpz_romanrubin_HSC
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_HSC_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['tpz']
          pz:
            inform_tpz:
              use_atts: ['LSST_obs_u', 'LSST_obs_g', 'LSST_obs_r', 'LSST_obs_i', 'LSST_obs_z', 'LSST_obs_y']
              err_dict: {'LSST_obs_u': 'LSST_obs_u_err', 'LSST_obs_g': 'LSST_obs_g_err', 'LSST_obs_r': 'LSST_obs_r_err', 'LSST_obs_i': 'LSST_obs_i_err', 'LSST_obs_z': 'LSST_obs_z_err', 'LSST_obs_y': 'LSST_obs_y_err', 'redshift': 'None'}
              tree_strategy: sklearn
            estimate_tpz:
              test_err_dict: {'LSST_obs_u': 'LSST_obs_u_err', 'LSST_obs_g': 'LSST_obs_g_err', 'LSST_obs_r': 'LSST_obs_r_err', 'LSST_obs_i': 'LSST_obs_i_err', 'LSST_obs_z': 'LSST_obs_z_err', 'LSST_obs_y': 'LSST_obs_y_err', 'redshift': None}


    - Flavor:
        name: bpz_romanrubin_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['bpz']
          pz:
            inform_bpz:
              columns_file: /sdf/home/y/yashraj/romandesc.columns

    - Flavor:
        name: bpz_romanrubin_HSC
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_HSC_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['bpz']
          pz:
            inform_bpz:
              columns_file: /sdf/home/y/yashraj/romandesc.columns

    - Flavor:
        name: bpz_romanrubin_zCOSMOS
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_zCOSMOS_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['bpz']
          pz:
            inform_bpz:
              columns_file: /sdf/home/y/yashraj/romandesc.columns

    - Flavor:
        name: gpz_romanrubin_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: VC
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}

    - Flavor:
        name: gpz_romanrubin_zCOSMOS
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_zCOSMOS_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: VC
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}

    - Flavor:
        name: gpz_romanrubin_HSC
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_HSC_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: VC
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}

    - Flavor:
        name: simplenn_romanrubin_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['simplenn']
          pz:
            inform_simplenn:
              width: 0.05
              max_iter: 500

    - Flavor:
        name: simplenn_romanrubin_HSC
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_HSC_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['simplenn']
          pz:
            inform_simplenn:
              width: 0.05
              max_iter: 500

    - Flavor:
        name: simplenn_romanrubin_zCOSMOS
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_zCOSMOS_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['simplenn']
          pz:
            inform_simplenn:
              width: 0.05
              max_iter: 500

    - Flavor:
        name: som_base_base
        pipelines: ['tomography', 'som_pz']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k

    - Flavor:
        name: gpz_romanrubinGC_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: GC
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}

    - Flavor:
        name: gpz_romanrubinVD_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: VD
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}

    - Flavor:
        name: gpz_romanrubinGD_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: GD
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}

    - Flavor:
        name: gpz_romanrubinVL_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: VL
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}

    - Flavor:
        name: gpz_romanrubinGL_base
        pipelines: ['pz', 'tomography']
        file_aliases:  # Set the training and test files
          test: test_file_100k
          train: train_file_100k
        pipeline_overrides:
          default:
            kwargs:
              algorithms: ['gpz']
          pz:
            inform_gpz:
              gpz_method: GL
            estimate_gpz:
              err_bands: {'LSST_obs_u': 'LSST_obs_u_err'}
